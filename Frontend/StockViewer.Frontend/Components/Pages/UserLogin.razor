@page "/login"
@rendermode InteractiveServer

@inject NavigationManager NavigationManager
@inject UsersClient UsersClient

<PageTitle>Log in</PageTitle>
<h3>Log in</h3>


@if (user is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
    <div class="col-md-4">
        <EditForm Model="@user" FormName="LoginUser" OnValidSubmit="handleSubmitAsync">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="mb-3">
                <label for="Name" class="form-label">User name (login):</label>
                <InputText id="Name" placeholder="Type Login here" @bind-Value="user.Login"
                    class="form-control" />
                <ValidationMessage For="()=>user.Login" />
            </div>
            <div class="mb-3">
                <label for="Passoword" class="form-label">Passoword:</label>
                <InputText id="Password" type="password" placeholder="Password" @bind-Value="user.Password"
                    class="form-control" />
                <ValidationMessage For="()=>user.Password" />
            </div>
            <button type="submit" class="btn btn-primary" href="/">Login</button>
            <a role="button" class="btn btn-secondary" href="/login">Cancel </a>

        </EditForm>
    </div>
    <div class="mt-2">No account yet? Create one <a href="/register">here</a>.</div>
</div>
}

@code {
    [SupplyParameterFromForm]
    private User? user { get; set; }

    /// <summary>
    /// Handles the form submission asynchronously.
    /// </summary>
    private async Task handleSubmitAsync()
    {
        if(user is  not null && await UsersClient.CheckUserAsync(user)){
            NavigationManager.NavigateTo($"/{user.Login}");
        }
        else {
            NavigationManager.NavigateTo("/login");
        }
    }

    /// <summary>
    /// Method called when the component's parameters are set.
    /// </summary>
    protected override void OnParametersSet()
    {
        user = new();
    }
}