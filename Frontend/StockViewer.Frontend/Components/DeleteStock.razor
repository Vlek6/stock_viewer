@inject UsersClient UsersClient
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<!-- Modal -->
<div class="modal fade" id="@GetModalId(Stock)" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title fs-5" id="exampleModalLabel">@title</h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="button" class="btn btn-primary" data-bs-dismiss="modal" @onclick="@Confirm">Delete</button>
      </div>
    </div>
  </div>
</div>

@code {
    [Parameter]
    public StockSummary? Stock {get; set;}
    private string? title = string.Empty;
    public static string GetModalId(StockSummary? stock){
        ArgumentNullException.ThrowIfNull(stock);
        return $"deleteModal-{stock.Id}";
    } 

    protected override void  OnParametersSet(){
        title = $"Delete {Stock?.Name}";
    }
    private void Confirm(){
        UsersClient.DeleteStockById(Stock!.Id);
        Console.WriteLine($"Stock to delete: {Stock.Name}");
        Console.Write(UsersClient.currentUser!.GetFollowedStocks());
        NavigationManager.Refresh();
    }
}
